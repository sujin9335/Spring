새 프로젝트
New > Spring Legacy Project > spring MVC Project > "MyBatisTest" > "com.test.mybatis" > finish

MyBatis(iBatis)
- 영속성 계층(= 데이터베이스 조작 계층
- JDBC 역할
- 응용 프로그램 <-> JDBC <-> 데이터베이스
- 응용 프로그램 <-> MyBatis <-> 데이터베이스

Spring Mybatis
- 스프링 프로젝트 중 하나
1. XML Mapper를 사용하는 방식
2. Interface Mapper를 사용하는 방식

프로젝트 설정
1. pom.xml
   - JDK 11
   - Spring 5.0.7
Project Facets
   Java 11로 바꾸기

2. pom.xml
   - MyBatis > 의존성 추가
     download폴더 - MyBatis - pom.txt 다운 > 전체 복사 붙여넣기.
   - ojdbc6.jar > lib 복사
     WEB-INF - lib 폴더 생성 - ojdbc6.jar 넣기 : 스프링프로젝튼는 없어서 만들어야됨 lib, (ojdbc 가 싸운 이슈가 있어서 직접 넣어야됨)


MyBatisTest > JDBC 연결 테스트
- 업무 구현(X)
- 테스트(O)
- src/test/java > "com.test.persistence" > "JDBCTest.java"

pom.xml
exclusions ~ scope까지 지우기 > 선생님 download 폴더가서 다운받아서 전체복사붙여넣기 하면 됨




Connection 객체 생성
- DBUtil.open() > DB 연결 > Connection 객체 생성 X 반복
- 모두 DB 연결 > 관리되지 않는 Connection 객체 > 메모리 차지, 성능 저하
- 사용 완료된 Connection > Close() > 번거로움;;

Connection Pool, 커넥션 풀
- Commons DBCP
- Tomcat DBCP
- HikariCP > 스프링 부트 2.0부터 기본으로 사용


Commons DBCP
- pom.xml > commons-dbcp 의존성 추가
- WEB-INF > spring > root-context.xml 설정추가

-com.test.mybatis.persistence > "DBCPTest.java"


HikariCP
- pom.xml > 의존성 추가
- WEB-INF > spring > root-context.xml 설정추가


MyBatis
- pom.xml > 의존선 추가(4개) : 선생님꺼 복붙했던거
- root-context.xml > 설정 추가 : src/main/resources 에 mapper 폴더 생성
-com.test.mybatis.persistence > "MapperTest.java"



SQL 실행
- com.test.controller > MyBatisController.java

- com.test.persistence > MyBatisDAO.java (I)
					   > MyBatisDAOImpl.java (C)

- com.text.domain > MyBatisDTO.java

- src/main/resources > mapper > "mybatis.xml"

- views > list.jsp
		> add.jsp
		> addok.jsp

- MybatisTest > "script.sql"











